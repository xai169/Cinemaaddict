{"version":3,"file":"bundle.js","mappings":"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ACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,oBAAoB,uEAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAa;AAC5B,mBAAmB,oDAAa;AAChC;AACA;AACA,YAAY,uEAAqB;AACjC,WAAW,uEAAqB;AAChC,aAAa,2DAAS;AACtB;AACA;AACA;AACA;AACA,cAAc,mEAAgB;AAC9B;AACA,0BAA0B,8DAAY;AACtC,yBAAyB,8DAAY;AACrC,2BAA2B,8DAAY;AACvC,KAAK;AACL,cAAc,uEAAqB;AACnC;AACA;AACA,aAAa,uEAAqB;AAClC,gBAAgB,uEAAqB;AACrC;AACA;AACA;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBmD;;AAEpC;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3ByC;AACzC;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA,4CAA4C,aAAa;AACzD;AACA,mDAAmD,eAAe;AAClE,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA;AACA;AACA;AACe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,4BAA4B,iDAAY;AACvD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvByC;AAC2C;AACpF;AACA;AACA;AACA,yCAAyC,eAAe;AACxD,yCAAyC,iBAAiB;AAC1D;AACA,4CAA4C,oCAAoC;AAChF,gDAAgD,kBAAkB;AAClE,6CAA6C,kBAAkB;AAC/D;AACA,uCAAuC,gBAAgB;AACvD,8CAA8C,4EAAmB,uBAAuB;AACxF,2CAA2C,0BAA0B;AACrE;AACA,iGAAiG,uEAAkB,oCAAoC;AACvJ,gGAAgG,uEAAkB,kCAAkC;AACpJ,yFAAyF,uEAAkB,mCAAmC;AAC9I;AACA;AACA;AACA;AACe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7CsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,uBAAuB,iDAAY;AAClD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBsC;AACtC;AACA;AACA;AACA;AACA;AACe,uBAAuB,iDAAY;AAClD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXyC;AACzC;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACe,yBAAyB,oDAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfyC;;AAEzC;AACA;AACA;AACA;AACA,6GAA6G,kBAAkB;AAC/H,yGAAyG,gBAAgB;AACzH,6GAA6G,iBAAiB;AAC9H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,oDAAY;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7BsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,iCAAiC,iDAAY;AAC5D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChByC;AAC2C;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gBAAgB;AACxF;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D,kEAAkE,eAAe;AACjF;AACA;AACA;AACA,sDAAsD,iBAAiB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA;AACA;AACA,+CAA+C,iBAAiB;AAChE;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA,+CAA+C,4CAA4C;AAC3F;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA;AACA;AACA,+CAA+C,iBAAiB;AAChE;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE,oDAAoD,kBAAkB;AACtE,oDAAoD,kBAAkB;AACtE;AACA;AACA;AACA,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA,oEAAoE,uEAAkB,qCAAqC;AAC3H,oEAAoE,uEAAkB,mCAAmC;AACzH,oEAAoE,uEAAkB,oCAAoC;AAC1H;AACA;AACA;AACA;AACA;AACA,uGAAuG,yBAAyB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,oBAAoB,oDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvIyC;AACzC;AACA;AACA;AACA;AACA;AACe,6BAA6B,oDAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,iCAAiC,iDAAY;AAC5D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChByC;AACzC;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCpBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNsC;AACS;AACM;AACN;AACP;AACmB;AACF;AACU;AACpB;AACI;AACS;AACH;AACZ;AACa;AACb;AACqC;AACvB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sEAAgB;AACzE,gBAAgB,uEAAe;AAC/B;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,iCAAiC,sDAAS;AAC1C;AACA;AACA,QAAQ,2DAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD,MAAM,yDAAM,mBAAmB,yDAAY,qCAAqC,6DAAc;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAM,kDAAkD,6DAAc;AACxE;AACA;AACA,yDAAM,sBAAsB,qDAAQ,wBAAwB,6DAAc;AAC1E,yDAAM,0BAA0B,4DAAc,0BAA0B,6DAAc;AACtF;AACA;AACA;AACA,EAAE,yDAAM,sBAAsB,iEAAiB,iBAAiB,6DAAc;AAC9E,EAAE;AACF,EAAE,yDAAM,wBAAwB,0DAAY,wBAAwB,6DAAc;AAClF,mCAAmC,6DAAe;AAClD,EAAE,yDAAM,qDAAqD,6DAAc;AAC3E,gCAAgC,0DAAY;AAC5C,EAAE,yDAAM,oEAAoE,6DAAc;AAC1F;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA,0CAA0C,oEAAsB;AAChE,EAAE,yDAAM,8EAA8E,6DAAc;AACpG;AACA,oDAAoD,wEAAqB;AACzE,kBAAkB,uBAAuB;AACzC;AACA;AACA,qCAAqC,+DAAiB;AACtD,EAAE,yDAAM,yEAAyE,6DAAc;AAC/F;AACA,+CAA+C,qEAAkB;AACjE,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA,wCAAwC,gEAAkB;AAC1D,IAAI,yDAAM,uEAAuE,6DAAc;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,C","sources":["webpack://cinemaddict/./node_modules/dayjs-random/index.min.js","webpack://cinemaddict/./node_modules/dayjs/dayjs.min.js","webpack://cinemaddict/./src/mock/mock-comments.js","webpack://cinemaddict/./src/mock/mock-film-card.js","webpack://cinemaddict/./src/mock/mock-filters.js","webpack://cinemaddict/./src/utils/common.js","webpack://cinemaddict/./src/utils/film-cards.js","webpack://cinemaddict/./src/utils/render.js","webpack://cinemaddict/./src/view/abstract.js","webpack://cinemaddict/./src/view/comment.js","webpack://cinemaddict/./src/view/empty-film-list.js","webpack://cinemaddict/./src/view/film-card.js","webpack://cinemaddict/./src/view/film-list.js","webpack://cinemaddict/./src/view/film-section.js","webpack://cinemaddict/./src/view/films-count.js","webpack://cinemaddict/./src/view/menu.js","webpack://cinemaddict/./src/view/mostcommented-films.js","webpack://cinemaddict/./src/view/popup.js","webpack://cinemaddict/./src/view/showmore-button.js","webpack://cinemaddict/./src/view/toprated-films.js","webpack://cinemaddict/./src/view/user-rank.js","webpack://cinemaddict/webpack/bootstrap","webpack://cinemaddict/webpack/runtime/compat get default export","webpack://cinemaddict/webpack/runtime/define property getters","webpack://cinemaddict/webpack/runtime/hasOwnProperty shorthand","webpack://cinemaddict/webpack/runtime/make namespace object","webpack://cinemaddict/./src/main.js"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).random=t()}(this,(function(){\"use strict\";return(e,t,n)=>{n.between=(e,t)=>{const r=n(e).valueOf(),o=n(t).valueOf()-r,u=Math.floor(Math.random()*o+1),a=n(r+u);return n(a)},n.soon=(e=1,t=n())=>{const r=n(t),o=r.add(e,\"day\");return n.between(r,o)},n.recent=(e=1,t=n())=>{const r=n(t),o=r.subtract(e,\"day\");return n.between(o,r)},n.future=(e=1,t=n())=>{const r=n(t),o=r.add(e,\"year\");return n.between(r,o)},n.past=(e=1,t=n())=>{const r=n(t),o=r.subtract(e,\"year\");return n.between(o,r)}}}));","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","import { getRandomInt, getRandomArrayElement } from '../utils/common.js';\r\nimport dayjs from 'dayjs';\r\nimport dayjsRandom from 'dayjs-random';\r\ndayjs.extend(dayjsRandom);\r\n\r\nconst emojis = ['angry.png', 'puke.png', 'sleeping.png', 'smile.png'];\r\nconst texts = ['Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Cras aliquet varius magna, non porta ligula feugiat eget.', 'Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra.', 'Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.', 'Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.', 'Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis.', 'Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.'];\r\nconst authorNames = ['Patrik', 'Liza', 'Pashok', 'Barak Obama'];\r\n\r\nconst createComment = () => {\r\n  const commentsDate = dayjs.between('2023-03-18T03:00:00', dayjs()).format('YYYY/MM/DD HH:MM');\r\n\r\n  return {\r\n    emoji: getRandomArrayElement(emojis),\r\n    text: getRandomArrayElement(texts),\r\n    author: getRandomArrayElement(authorNames),\r\n    date: commentsDate,\r\n  }\r\n};\r\n\r\nconst generateComments = () => {\r\n  return new Array(getRandomInt(0, 5)).fill().map(createComment);\r\n\r\n};\r\n\r\nexport { generateComments };","import { getRandomInt, getRandom, getRandomArrayElement } from '../utils/common.js';\r\nimport { generateComments } from './mock-comments.js';\r\nimport dayjs from 'dayjs';\r\nimport dayjsRandom from 'dayjs-random';\r\ndayjs.extend(dayjsRandom);\r\n\r\n//Данные для карточки\r\nconst posters = ['made-for-each-other.png', 'popeye-meets-sinbad.png', 'sagebrush-trail.jpg', 'santa-claus-conquers-the-martians.jpg', 'the-dance-of-life.jpg', 'the-great-flamarion.jpg', 'the-man-with-the-golden-arm.jpg'];\r\nconst titles = ['The God Father', 'Good Fellas', 'Shutter Island', 'Once Upon a Time in America', 'Casino', 'The Quick and the Dead', 'Pulp Fiction'];\r\nconst genres = ['crime', 'drama', 'horror', 'comedy', 'action', 'triller'];\r\nconst descriptions = ['Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Cras aliquet varius magna, non porta ligula feugiat eget.', 'Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra.', 'Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.', 'Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.', 'Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis.', 'Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.'];\r\nconst directors = ['Alfred Hitchcock', 'John Ford', 'Charles Chaplin', 'Akira Kurosawa'];\r\nconst writers = ['Billy Wilder', 'Ethan Coen', 'Robert Towne', 'Quentin Tarantino', 'Charlie Kaufman'];\r\nconst actors = ['Jack Nicholson', 'Marlon Brando', 'Robert De Niro', 'Al Pacino', 'Daniel Day-Lewis', 'Dustin Hoffman', 'Tom Hanks'];\r\nconst countries = ['USA', 'Russia', 'France', 'Japan', 'Germany'];\r\nconst ageRaitings = ['18+', '16+', '14+', '6+'];\r\n\r\n\r\n//Генерация полей для карточки\r\nconst generateFilmDescription = () => {\r\n  const description = []\r\n  for (let i = 0; i < getRandomInt(1, 5); i++) {\r\n    description.push(getRandomArrayElement(descriptions));\r\n  }\r\n  return description.join('');\r\n}\r\n\r\nconst generateFilmWorkers = (workersGroup) => {\r\n  const workers = []\r\n  for (let i = 0; i < 3; i++) {\r\n    workers.push(getRandomArrayElement(workersGroup));\r\n  }\r\n  return workers.join(',');\r\n}\r\n\r\nconst getShortDescription = (string) => {\r\n  if (string.length > 140) {\r\n    return `${string.slice(0, 139)}...`;\r\n  }\r\n  return string;\r\n};\r\n\r\nconst generateGenres = () => {\r\n  const filmGenres = []\r\n  for (let i = 0; i < 3; i++) {\r\n    filmGenres.push(getRandomArrayElement(genres));\r\n  }\r\n  return filmGenres;\r\n}\r\n\r\nconst setFilmCardControl = {\r\n  basic(isActive) {\r\n    if (isActive) {\r\n      return `film-card__controls-item--active`;\r\n    }\r\n  },\r\n  popup(isActive) {\r\n    if (isActive) {\r\n      return `film-details__control-button--active`;\r\n    }\r\n  }\r\n}\r\n\r\n//Генерация карточки фильма\r\n\r\nconst generateFilmCard = () => {\r\n  const date = dayjs.between('1950-06-10T00:00:00', '2024-03-02T03:00:00');\r\n  const duration = dayjs.between('1950-06-10T01:00:00', '1950-06-10T04:00:00');\r\n\r\n  return {\r\n    poster: getRandomArrayElement(posters),\r\n    title: getRandomArrayElement(titles),\r\n    raiting: getRandom(0, 10).toFixed(1),\r\n    releaseDate: date,\r\n    duration: duration.format('h[h] m[min]'),\r\n    genre: generateGenres(),\r\n    description: generateFilmDescription(),\r\n    comments: generateComments(),\r\n    filter: {\r\n      isFavorite: Boolean(getRandomInt(0, 1)),\r\n      isWatched: Boolean(getRandomInt(0, 1)),\r\n      isWatchList: Boolean(getRandomInt(0, 1)),\r\n    },\r\n    director: getRandomArrayElement(directors),\r\n    writers: generateFilmDescription(writers),\r\n    actors: generateFilmWorkers(actors),\r\n    country: getRandomArrayElement(countries),\r\n    ageRaiting: getRandomArrayElement(ageRaitings),\r\n  }\r\n}\r\n\r\nexport { generateFilmCard, getShortDescription, setFilmCardControl };","const setFiltersCount = (filmCards) => {\r\n  let filters = {\r\n    watchList: 0,\r\n    history: 0,\r\n    favorite: 0,\r\n    rank: 0,\r\n  };\r\n\r\n  if (filmCards.length === 0) {\r\n    return filters;\r\n  }\r\n\r\n  filmCards.forEach((filmCard) => {\r\n    if (filmCard.filter.isFavorite) {\r\n      filters.favorite += 1;\r\n    }\r\n    if (filmCard.filter.isWatched) {\r\n      filters.history += 1;\r\n    }\r\n    if (filmCard.filter.isWatchList) {\r\n      filters.watchList += 1;\r\n    }\r\n  })\r\n\r\n  if (filters.history === 0) {\r\n    filters.rank = '';\r\n  }\r\n  if (filters.history > 1) {\r\n    filters.rank = 'novice';\r\n  }\r\n  if (filters.history > 10) {\r\n    filters.rank = 'fan';\r\n  }\r\n  if (filters.history > 21) {\r\n    filters.rank = 'movie buff';\r\n  };\r\n\r\n  return filters;\r\n};\r\n\r\nexport { setFiltersCount };","// ESCAPE\r\nconst Keys = {\r\n  ESC: 'Esc',\r\n  ESCAPE: 'Escape',\r\n}\r\n\r\nconst checkEsc = (evt) => {\r\n  return evt.key === Keys.ESC || evt.key === Keys.ESCAPE;\r\n}\r\n\r\nconst getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction getRandom(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\n//Функция получения рандомного элемента из массива\r\nconst getRandomArrayElement = (elements) => {\r\n  return elements[getRandomInt(0, elements.length - 1)];\r\n};\r\n\r\nexport { getRandomInt, getRandom, getRandomArrayElement, checkEsc };","//Функция сравнения количества комментов у фильмов\r\nconst compareCommentsNumber = (filmCardA, filmCardB) => {\r\n  return filmCardB.comments.length - filmCardA.comments.length;\r\n};\r\n\r\n//функция сравнения рейтинга у фильмов\r\nconst compareFilmRaiting = (filmCardA, filmCardB) => {\r\n  return filmCardB.raiting - filmCardA.raiting;\r\n};\r\n\r\nexport { compareCommentsNumber, compareFilmRaiting };","const RenderPosition = {\r\n  AFTERBEGIN: 'afterbegin',\r\n  BEFOREEND: 'beforeend',\r\n};\r\n\r\n//Функция отрисовки разметки\r\nconst render = (container, element, place) => {\r\n  switch (place) {\r\n    case RenderPosition.AFTERBEGIN:\r\n      container.prepend(element);\r\n      break;\r\n    case RenderPosition.BEFOREEND:\r\n      container.append(element);\r\n      break;\r\n  }\r\n};\r\n\r\n//Функция создания элемента, заполняемого разметкой\r\nconst createElement = (template) => {\r\n  const newElement = document.createElement('div');\r\n  newElement.innerHTML = template;\r\n\r\n  return newElement.firstChild;\r\n};\r\n\r\nexport { createElement, render, RenderPosition };","import { createElement } from '../utils/render.js';\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error('Can\\'t instantiate Abstract, only concrete one.');\n    }\n\n    this._element = null;\n    this._callback = {};\n  }\n\n  getTemplate() {\n    throw new Error('Abstract method not implemented: getTemplate');\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}","import AbstractView from './abstract.js';\r\n\r\nconst createCommentsTemplate = (comment) => {\r\n  return `<li class=\"film-details__comment\">\r\n  <span class=\"film-details__comment-emoji\">\r\n    <img src=\"./images/emoji/${comment.emoji}\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\r\n  </span>\r\n  <div>\r\n    <p class=\"film-details__comment-text\">${comment.text}</p>\r\n    <p class=\"film-details__comment-info\">\r\n      <span class=\"film-details__comment-author\">${comment.author}</span>\r\n      <span class=\"film-details__comment-day\">${comment.date}</span>\r\n      <button class=\"film-details__comment-delete\">Delete</button>\r\n    </p>\r\n  </div>\r\n</li>`;\r\n}\r\n\r\nexport default class Comments extends AbstractView {\r\n  constructor(comment) {\r\n    super();\r\n    this._comment = comment;\r\n  }\r\n\r\n  getTemplate() {\r\n    return createCommentsTemplate(this._comment);\r\n  }\r\n}","import AbstractView from \"./abstract\";\r\n\r\nconst createEmptyFilmListTemplate = () => {\r\n  return `<section class=\"films\">\r\n  <section class=\"films-list\">\r\n    <h2 class=\"films-list__title\">There are no movies in our database</h2>\r\n\r\n    <!--\r\n      Значение отображаемого текста зависит от выбранного фильтра:\r\n        * All movies – 'There are no movies in our database'\r\n        * Watchlist — 'There are no movies to watch now';\r\n        * History — 'There are no watched movies now';\r\n        * Favorites — 'There are no favorite movies now'.\r\n    -->\r\n  </section>\r\n</section>`;\r\n}\r\n\r\nexport default class EmptyFilmList extends AbstractView {\r\n\r\n  getTemplate() {\r\n    return createEmptyFilmListTemplate()\r\n  }\r\n}\r\n","import AbstractView from './abstract.js';\r\nimport { getShortDescription, setFilmCardControl } from '../mock/mock-film-card.js';\r\n\r\nconst createFilmCardTemplate = (filmCard) => {\r\n  return `<article class=\"film-card\">\r\n          <h3 class=\"film-card__title\">${filmCard.title}</h3>\r\n          <p class=\"film-card__rating\">${filmCard.raiting}</p>\r\n          <p class=\"film-card__info\">\r\n            <span class=\"film-card__year\">${filmCard.releaseDate.format('YYYY')}</span>\r\n            <span class=\"film-card__duration\">${filmCard.duration}</span>\r\n            <span class=\"film-card__genre\">${filmCard.genre[0]}</span>\r\n          </p>\r\n          <img src=\"./images/posters/${filmCard.poster}\" alt=\"\" class=\"film-card__poster\">\r\n          <p class=\"film-card__description\">${getShortDescription(filmCard.description)}</p>\r\n          <a class=\"film-card__comments\">${filmCard.comments.length} comments</a>\r\n          <div class=\"film-card__controls\">\r\n            <button class=\"film-card__controls-item film-card__controls-item--add-to-watchlist ${setFilmCardControl.basic(filmCard.filter.isWatchList)}\" type=\"button\">Add to watchlist</button>\r\n            <button class=\"film-card__controls-item film-card__controls-item--mark-as-watched ${setFilmCardControl.basic(filmCard.filter.isWatched)}\" type=\"button\">Mark as watched</button>\r\n            <button class=\"film-card__controls-item film-card__controls-item--favorite ${setFilmCardControl.basic(filmCard.filter.isFavorite)}\" type=\"button\">Mark as favorite</button>\r\n          </div>\r\n        </article>`;\r\n}\r\n\r\nexport default class FilmCard extends AbstractView {\r\n  constructor(filmCard) {\r\n    super();\r\n    this._filmCard = filmCard;\r\n    this._popupShowClickHandler = this._popupShowClickHandler.bind(this);\r\n  }\r\n\r\n  getTemplate() {\r\n    return createFilmCardTemplate(this._filmCard);\r\n  }\r\n\r\n  _popupShowClickHandler(evt) {\r\n    evt.preventDefault();\r\n    this._callback.popupShowClick();\r\n  }\r\n\r\n  setPopupShowClickHandler(callback) {\r\n    this._callback.popupShowClick = callback;\r\n    this.getElement().querySelector('.film-card__title').addEventListener('click', this._popupShowClickHandler);\r\n    this.getElement().querySelector('.film-card__poster').addEventListener('click', this._popupShowClickHandler);\r\n    this.getElement().querySelector('.film-card__comments').addEventListener('click', this._popupShowClickHandler);\r\n  };\r\n}","import AbstractView from \"./abstract\";\r\n\r\nconst createFilmListTemplate = () => {\r\n  return `<section class=\"films-list\">\r\n    <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\r\n\r\n    <div class=\"films-list__container\">\r\n    </div>\r\n\r\n    </section>`;\r\n}\r\n\r\nexport default class FilmList extends AbstractView {\r\n\r\n  getTemplate() {\r\n    return createFilmListTemplate();\r\n  }\r\n}","import AbstractView from \"./abstract\";\r\n\r\nconst createFilmSectionTemplate = () => {\r\n  return `<section class=\"films\"></section>`;\r\n}\r\n\r\nexport default class FilmList extends AbstractView {\r\n\r\n  getTemplate() {\r\n    return createFilmSectionTemplate();\r\n  }\r\n}","import AbstractView from './abstract.js';\r\n\r\nconst createFilmsCountTemplate = (filmCards) => {\r\n  return `<p>${filmCards.length} movies inside</p>`;\r\n};\r\n\r\nexport default class FilmsCount extends AbstractView {\r\n  constructor(filmCards) {\r\n    super();\r\n    this._filmCards = filmCards;\r\n  }\r\n\r\n  getTemplate() {\r\n    return createFilmsCountTemplate(this._filmCards);\r\n  }\r\n}","import AbstractView from './abstract.js';\n\nconst createMenuTemplate = (filters) => {\n  return `<nav class=\"main-navigation\">\n  <div class=\"main-navigation__items\">\n    <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n    <a href=\"#watchlist\" class=\"main-navigation__item\">Watchlist <span class=\"main-navigation__item-count\">${filters.watchList}</span></a>\n    <a href=\"#history\" class=\"main-navigation__item\">History <span class=\"main-navigation__item-count\">${filters.history}</span></a>\n    <a href=\"#favorites\" class=\"main-navigation__item\">Favorites <span class=\"main-navigation__item-count\">${filters.favorite}</span></a>\n  </div>\n  <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n</nav>\n\n<ul class=\"sort\">\n  <li><a href=\"#\" class=\"sort__button sort__button--active\">Sort by default</a></li>\n  <li><a href=\"#\" class=\"sort__button\">Sort by date</a></li>\n  <li><a href=\"#\" class=\"sort__button\">Sort by rating</a></li>\n</ul>`;\n}\n\nexport default class Menu extends AbstractView {\n  constructor(filters) {\n    super();\n    this._filters = filters;\n  }\n\n  getTemplate() {\n    return createMenuTemplate(this._filters);\n  }\n};\n","import AbstractView from \"./abstract\";\r\n\r\nconst createMostCommentedFilmsTemplate = () => {\r\n  return `<section class=\"films-list films-list--extra\" id=\"most_commented\">\r\n  <h2 class=\"films-list__title\">Most commented</h2>\r\n\r\n  <div class=\"films-list__container\">\r\n  </div>\r\n    </section>`;\r\n}\r\n\r\nexport default class MostCommentedFilms extends AbstractView {\r\n\r\n  getTemplate() {\r\n    return createMostCommentedFilmsTemplate();\r\n  }\r\n}","import AbstractView from './abstract.js';\r\nimport { getShortDescription, setFilmCardControl } from '../mock/mock-film-card.js';\r\n\r\nconst createPopupTemplate = (filmCard) => {\r\n  return `<section class=\"film-details\">\r\n  <form class=\"film-details__inner\" action=\"\" method=\"get\">\r\n    <div class=\"film-details__top-container\">\r\n      <div class=\"film-details__close\">\r\n        <button class=\"film-details__close-btn\" type=\"button\">close</button>\r\n      </div>\r\n      <div class=\"film-details__info-wrap\">\r\n        <div class=\"film-details__poster\">\r\n          <img class=\"film-details__poster-img\" src=\"./images/posters/${filmCard.poster}\" alt=\"\">\r\n\r\n          <p class=\"film-details__age\">${filmCard.ageRaiting}</p>\r\n        </div>\r\n\r\n        <div class=\"film-details__info\">\r\n          <div class=\"film-details__info-head\">\r\n            <div class=\"film-details__title-wrap\">\r\n              <h3 class=\"film-details__title\">${filmCard.title}</h3>\r\n              <p class=\"film-details__title-original\">Original: ${filmCard.title}</p>\r\n            </div>\r\n\r\n            <div class=\"film-details__rating\">\r\n              <p class=\"film-details__total-rating\">${filmCard.raiting}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <table class=\"film-details__table\">\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Director</td>\r\n              <td class=\"film-details__cell\">${filmCard.director}</td>\r\n            </tr>\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Writers</td>\r\n              <td class=\"film-details__cell\">${filmCard.writers}</td>\r\n            </tr>\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Actors</td>\r\n              <td class=\"film-details__cell\">${filmCard.actors}</td>\r\n            </tr>\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Release Date</td>\r\n              <td class=\"film-details__cell\">${filmCard.releaseDate.format('DD MMMM YYYY')}</td>\r\n            </tr>\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Runtime</td>\r\n              <td class=\"film-details__cell\">${filmCard.duration}</td>\r\n            </tr>\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Country</td>\r\n              <td class=\"film-details__cell\">${filmCard.country}</td>\r\n            </tr>\r\n            <tr class=\"film-details__row\">\r\n              <td class=\"film-details__term\">Genres</td>\r\n              <td class=\"film-details__cell\">\r\n                <span class=\"film-details__genre\">${filmCard.genre[0]}</span>\r\n                <span class=\"film-details__genre\">${filmCard.genre[1]}</span>\r\n                <span class=\"film-details__genre\">${filmCard.genre[2]}</span></td>\r\n            </tr>\r\n          </table>\r\n\r\n          <p class=\"film-details__film-description\">${filmCard.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <section class=\"film-details__controls\">\r\n        <button type=\"button\" class=\"film-details__control-button ${setFilmCardControl.popup(filmCard.filter.isWatchList)} film-details__control-button--watchlist\" id=\"watchlist\" name=\"watchlist\">Add to watchlist</button>\r\n        <button type=\"button\" class=\"film-details__control-button ${setFilmCardControl.popup(filmCard.filter.isWatched)} film-details__control-button--watched\" id=\"watched\" name=\"watched\">Already watched</button>\r\n        <button type=\"button\" class=\"film-details__control-button ${setFilmCardControl.popup(filmCard.filter.isFavorite)} film-details__control-button--favorite\" id=\"favorite\" name=\"favorite\">Add to favorites</button>\r\n      </section>\r\n    </div>\r\n\r\n    <div class=\"film-details__bottom-container\">\r\n      <section class=\"film-details__comments-wrap\">\r\n        <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${filmCard.comments.length}</span></h3>\r\n\r\n        <ul class=\"film-details__comments-list\"></ul>\r\n\r\n        <div class=\"film-details__new-comment\">\r\n          <div class=\"film-details__add-emoji-label\"></div>\r\n\r\n          <label class=\"film-details__comment-label\">\r\n            <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\r\n          </label>\r\n\r\n          <div class=\"film-details__emoji-list\">\r\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\">\r\n            <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\r\n              <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\r\n            </label>\r\n\r\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\r\n            <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\r\n              <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\r\n            </label>\r\n\r\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\r\n            <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\r\n              <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\r\n            </label>\r\n\r\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\r\n            <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\r\n              <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </form>\r\n</section>`;\r\n}\r\n\r\nexport default class Popup extends AbstractView {\r\n  constructor(filmCard) {\r\n    super();\r\n    this._filmCard = filmCard;\r\n    this._popupCloseClickHandler = this._popupCloseClickHandler.bind(this);\r\n  }\r\n\r\n  getTemplate() {\r\n    return createPopupTemplate(this._filmCard);\r\n  }\r\n\r\n  _popupCloseClickHandler(evt) {\r\n    evt.preventDefault();\r\n    this._callback.popupCloseClick();\r\n  }\r\n\r\n  setPopupCloseClickHandler(callback) {\r\n    this._callback.popupCloseClick = callback;\r\n    this.getElement().querySelector('.film-details__close-btn').addEventListener('click', this._popupCloseClickHandler);\r\n  };\r\n}","import AbstractView from './abstract.js';\r\n\r\nconst createShowMoreButtonTemplate = () => {\r\n  return `<button class=\"films-list__show-more\">Show more</button>`;\r\n}\r\n\r\nexport default class ShowMoreButton extends AbstractView {\r\n  constructor() {\r\n    super();\r\n    this._clickHandler = this._clickHandler.bind(this);\r\n  }\r\n\r\n  getTemplate() {\r\n    return createShowMoreButtonTemplate();\r\n  }\r\n\r\n  _clickHandler(evt) {\r\n    evt.preventDefault();\r\n    this._callback.click();\r\n  }\r\n\r\n  setClickHandler(callback) {\r\n    this._callback.click = callback;\r\n    this.getElement().addEventListener('click', this._clickHandler);\r\n  };\r\n}","import AbstractView from \"./abstract\";\r\n\r\nconst createTopRatedFilmsTemplate = () => {\r\n  return `<section class=\"films-list films-list--extra\" id=\"top_rated\">\r\n  <h2 class=\"films-list__title\">Top rated</h2>\r\n\r\n  <div class=\"films-list__container\">\r\n  </div>\r\n    </section>`;\r\n}\r\n\r\nexport default class MostCommentedFilms extends AbstractView {\r\n\r\n  getTemplate() {\r\n    return createTopRatedFilmsTemplate();\r\n  }\r\n}","import AbstractView from './abstract.js';\r\n\r\nconst createUserRankTemplate = (filters) => {\r\n  if (filters.rank !== '') {\r\n    return `<section class=\"header__profile profile\">\r\n  <p class=\"profile__rating\">${filters.rank}</p>\r\n  <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\r\n</section>`\r\n  }\r\n};\r\n\r\nexport default class UserRank extends AbstractView {\r\n  constructor(filters) {\r\n    super();\r\n    this._filters = filters;\r\n  }\r\n\r\n  getTemplate() {\r\n    return createUserRankTemplate(this._filters);\r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import MenuView from \"./view/menu.js\";\r\nimport FilmCardView from \"./view/film-card.js\";\r\nimport FilmSectionView from \"./view/film-section.js\";\r\nimport FilmListView from \"./view/film-list.js\";\r\nimport PopupView from \"./view/popup.js\";\r\nimport ShowMoreButtonView from \"./view/showmore-button.js\";\r\nimport TopRatedFilmsView from \"./view/toprated-films.js\";\r\nimport MostCommentedFilmsView from \"./view/mostcommented-films.js\";\r\nimport UserRankView from \"./view/user-rank.js\";\r\nimport FilmsCountView from \"./view/films-count.js\";\r\nimport { generateFilmCard } from './mock/mock-film-card.js';\r\nimport { setFiltersCount } from './mock/mock-filters.js';\r\nimport CommentsView from \"./view/comment.js\";\r\nimport EmptyFilmListView from \"./view/empty-film-list.js\";\r\nimport { checkEsc } from './utils/common.js';\r\nimport { compareCommentsNumber, compareFilmRaiting } from './utils/film-cards.js';\r\nimport { render, RenderPosition } from './utils/render.js';\r\n\r\nconst EXTRA_FILMS_COUNT = 2;\r\nconst FILMS_START_COUNT = 5;\r\nconst FILM_CARDS_COUNT = 20;\r\nconst FILM_COUNT_PER_STEP = 5;\r\n\r\nconst siteBody = document.querySelector('body');\r\nconst siteHeaderElement = document.querySelector('.header');\r\nconst siteMainElement = document.querySelector('.main');\r\nconst filmFooterStatistic = document.querySelector('.footer__statistics');\r\n\r\n//Генерация данных\r\nconst filmCards = new Array(FILM_CARDS_COUNT).fill().map(generateFilmCard);\r\nconst filters = setFiltersCount(filmCards);\r\n\r\n//Функция отрисовки карточки и попапа\r\nconst renderFilmCard = (filmCardListElement, filmCard) => {\r\n  const filmComponent = new FilmCardView(filmCard);\r\n  const filmPopupComponent = new PopupView(filmCard);\r\n\r\n  const onEscKeyDown = (evt) => {\r\n    if (checkEsc(evt)) {\r\n      closePopup();\r\n    }\r\n  };\r\n\r\n  const showPopup = () => {\r\n    siteBody.appendChild(filmPopupComponent.getElement(filmCard));\r\n    const commentsList = filmPopupComponent.getElement(filmCard).querySelector('.film-details__comments-list');\r\n    for (let i = 0; i < filmCard.comments.length; i++) {\r\n      render(commentsList, new CommentsView(filmCard.comments[i]).getElement(), RenderPosition.BEFOREEND);\r\n    }\r\n\r\n    siteBody.classList.add('hide-overflow');\r\n    document.addEventListener('keydown', onEscKeyDown);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    siteBody.removeChild(filmPopupComponent.getElement(filmCard));\r\n    siteBody.classList.remove('hide-overflow');\r\n    document.removeEventListener('keydown', onEscKeyDown);\r\n  }\r\n\r\n  filmComponent.setPopupShowClickHandler(() => showPopup());\r\n  filmPopupComponent.setPopupCloseClickHandler(() => closePopup());\r\n\r\n  render(filmCardListElement, filmComponent.getElement(), RenderPosition.BEFOREEND)\r\n};\r\n\r\nrender(siteMainElement, new MenuView(filters).getElement(), RenderPosition.BEFOREEND);\r\nrender(filmFooterStatistic, new FilmsCountView(filmCards).getElement(), RenderPosition.BEFOREEND);\r\n\r\n//Проверка наличия фильмов\r\nif (filmCards.length === 0) {\r\n  render(siteMainElement, new EmptyFilmListView().getElement(), RenderPosition.BEFOREEND);\r\n} else {\r\n  render(siteHeaderElement, new UserRankView(filters).getElement(), RenderPosition.BEFOREEND);\r\n  const filmSectionComponent = new FilmSectionView();\r\n  render(siteMainElement, filmSectionComponent.getElement(), RenderPosition.BEFOREEND);\r\n  const filmListComponent = new FilmListView();\r\n  render(filmSectionComponent.getElement(), filmListComponent.getElement(), RenderPosition.BEFOREEND);\r\n\r\n  //Отрисовка карточек в списке\r\n  const filmContainer = filmListComponent.getElement().querySelector('.films-list__container');\r\n  for (let i = 0; i < FILMS_START_COUNT; i++) {\r\n    renderFilmCard(filmContainer, filmCards[i]);\r\n  };\r\n\r\n  //Отрисовка секций Top Rated и Most Commented\r\n  const mostCommentedFilmsComponent = new MostCommentedFilmsView();\r\n  render(filmSectionComponent.getElement(), mostCommentedFilmsComponent.getElement(), RenderPosition.BEFOREEND);\r\n  const mostCommentedList = mostCommentedFilmsComponent.getElement().querySelector('.films-list__container');\r\n  const mostCommentedFilms = filmCards.slice().sort(compareCommentsNumber);\r\n  for (let i = 0; i < EXTRA_FILMS_COUNT; i++) {\r\n    renderFilmCard(mostCommentedList, mostCommentedFilms[i]);\r\n  }\r\n  const TopRatedFilmsComponent = new TopRatedFilmsView();\r\n  render(filmSectionComponent.getElement(), TopRatedFilmsComponent.getElement(), RenderPosition.BEFOREEND);\r\n  const topRatedList = TopRatedFilmsComponent.getElement().querySelector('.films-list__container');\r\n  const topRatedFilms = filmCards.slice().sort(compareFilmRaiting);\r\n  for (let i = 0; i < EXTRA_FILMS_COUNT; i++) {\r\n    renderFilmCard(topRatedList, topRatedFilms[i]);\r\n  }\r\n\r\n  //Логика работы SHOW MORE BUTTON\r\n  if (filmCards.length > FILM_COUNT_PER_STEP) {\r\n    const showMoreButtonComponent = new ShowMoreButtonView();\r\n    render(filmListComponent.getElement(), showMoreButtonComponent.getElement(), RenderPosition.BEFOREEND);\r\n\r\n    let renderedFilmsCount = FILM_COUNT_PER_STEP;\r\n    showMoreButtonComponent.setClickHandler(() => {\r\n\r\n      filmCards\r\n        .slice(renderedFilmsCount, renderedFilmsCount + FILM_COUNT_PER_STEP)\r\n        .forEach((filmCard) => {\r\n          renderFilmCard(filmContainer, filmCard);\r\n        });\r\n\r\n      renderedFilmsCount += FILM_COUNT_PER_STEP;\r\n\r\n      if (renderedFilmsCount >= filmCards.length && renderedFilmsCount === filmCards.length) {\r\n        showMoreButtonComponent.getElement().remove();\r\n        showMoreButtonComponent.removeElement();\r\n      }\r\n    });\r\n  };\r\n}"],"names":[],"sourceRoot":""}